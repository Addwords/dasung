개발일지
---------------
24.03.26
-prisma연결 next빌드할때
next.config.js에 export가 out인 경우 -> 배포라던가?
route되는 경로 아래 page.tsx엔 generateStaticParams()가 필수다.
요녀석은 return이 배열이어야하나?

또한 'use client'와 혼용할 수 없다. ->빌드 때문은 아닌거 같고 use함수들은 개별 component에서 쓰고
page에 낑겨넣어서 사용해야하는듯 하다.

아직까진 구조를 익히는데 에너지가 많이 들어간다.

page.tsx에 export되는 녀석엔 async를 달수없는거 같다.

planetsacle 요녀석이 매일 껏다 켜졋다 하는녀석같다. mysql 무료버전인데 역시 무료는 무료다.

NEON 요녀석은 postgre 무료버젼인데 좀더 지켜봐야겠따.

ORM lib를 prisma로 선택한게 과연..맞는걸까 하는 의문이 들기 시작했다.

prisma는 SSL이 기본인가?

.env에 secret key값이 들어가면 깃헙에서 push할때 정책에 걸린다.
그걸 허용하게 할수도 있는데 막는게 맞는거같다.

------------------------
24.03.27
react에서 hook현상 때문인지 component가 두번 mount된다고 한다.
지금아는 지식으로는 isMounted 상태함수를 사용해서 rendering전 마운트상태에따라 return null 시킨다.

folder구조 layout에서 바로 component호출 형식으로 변경 -> children한테 props 전달이 잘 안댐.

folder구조 page에서 generateStaticParams()은 url매핑되는 부분(라우팅)을 담당하므로 우선적으로 등록되어있는 날짜 가져와서 배열로 return;

json 형태는 interface로 선언한다음 해야하나보다 -> key값을 dynamic으로 할경우

데이터 끌어오는거까지는 성공했다.

------------------------------
24.03.28

route에서 에러나던거 해결..
export const dynamic = "force-static";
이거 파일 끝부분에 넣어주니까 됨..
ver.14 부터..?

운전자명 업데이트 성공
서비스명으로 분기해서 update하는 작업 진행중

------------------------------------
24.03.29
iwinv 호스팅서버 등록함..
이제부턴 환경설정 해야한다.


============서버환경구성=============

1. [NodeJS]
sudo apt-get update
sudo apt-get install build-essential
sudo apt-get install curl
curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -- 
sudo apt-get install nodejs
	-> node -v 버전확인

2. [GIT]
sudo apt-get install git

3. [NGINX]
sudo apt-get install nginx
sudo systemctl status nginx
	-> 서버접속 후 welcome nginx 확인😎

cd /etc/nginx/conf.d
touch 도메인명.conf
vi 도메인명.conf

[VIP]
 


```
server {
        # SSL configuration

        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        client_max_body_size 10M;

        server_name www.dasung.co.kr dasung.co.kr;
        ssl_certificate "/etc/letsencrypt/live/dasung.co.kr/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/dasung.co.kr/privkey.pem";
        add_header Strict-Transport-Security "max-age=31536000";

        location / {
                proxy_set_header Host $host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header X-Real-IP $remote_addr;
                proxy_pass http://localhost:3000;
        }
}

server {
        listen 80;
        listen [::]:80;
        server_name www.dasung.co.kr dasung.co.kr;
        root /var/www/dasung/out/;
        location / {
                return 301 https://dasung.co.kr;
        }
        location /_next/webpack-hmr{
                proxy_pass http://localhost:3000/_next/webpack-hmr;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
        }

}
/home/admin/dev/dasung/dasung

```
cd..
vi nginx.conf
기본설정 conf주석

4. [nohup]
sudo apt-get install nohup

kill명령어 멀티?✅
$ 'ps -ef|grep -E "npm|next-"|grep -v "grep"|gawk -F `print $2`|xargs kill' 😎
---------------------
24.03.31
공장선택하는 첫화면 만들기
router depth하나 더 생성
websocket url 추가
---------------------
24.04.01
테이블 데이터 연동시키기
로딩바
 'ps -ef|grep -E "npm|next-"|grep -v "grep"'
```
   netstat -na --ip                                     : tcp/udp의 세션 목록 표시
   netstat -na | grep ESTABLISHED | wc -l               : 활성화된 세션수 확인
   netstat -nap | grep :80 | grep ESTABLISHED | wc -l   : 80포트 동시 접속자수
   netstat -nltp                                        : LISTEN 중인 포트 정보 표시
   netstat -r                                           : 서버의 라우팅 테이블 출력
```
----------------------
24.04.03
[JAVA]☕
```
$ sudo apt install openjdk-17-jdk
```
[Jenkins]👨‍🍳
1. key 다운로드?
```
$ sudo wget -O /usr/share/keyrings/jenkins-keyring.asc \
    https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
```
2. repository 생성?
```
$ echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] \
    https://pkg.jenkins.io/debian-stable binary/ | sudo tee \
    /etc/apt/sources.list.d/jenkins.list > /dev/null
```
3. 설치
```
$ sudo apt-get update
$ sudo apt-get install jenkins
```
4. 접속
http://localhost:8080
초기 비밀번호 unlock
vi /var/lib/jenkins/secrets/initialAdminPassword

# jenkins status 확인
sudo systemctl status jenkins

# jenkins 시작
sudo systemctl start jenkins
# jenkins 멈춤
sudo systemctl stop jenkins

studio랑 젠킨스 메모리 부족 문제로 못돌림..
----------------------------------------

24.04.05
job 데이터 구조 key:[]로 변경 -> 중복시간 가능해야함
공장별 비밀번호 달기 성공
TODO: 해야할거
    관리자 대쉬보드 만들고 차트 -> 일별, 월별, 년별 누계 필요
     ㄴ> 플러스 지난일자 데이터 입력 폼 필요
    자산(차량,운전자)관리 기능 만들어야함
    디자인?
----------------------------------------
24.04.10
프린트시 디자인 변경.
통계부분 만들어야함
---------------------------------------
24.04.17
한번만 수행하는 방법 찾음
mount 변수를 useRef로 선언하고
useEffect에서 return을 mount변수 flag를 바꾸는 방식
---------------------------------------
24.04.18
비밀번호 변경하는거 작업함
postFetcher사용중에 url 오타가 있었더니
(route)폴더 아래 순차적으로 뒤지는듯 했다.
이거때매 개빡쳤따.
이제 디자인 좀 변경하고 해야겠다.
마무리 준비
초기데이터 적재하는거도 만들어야할듯
--------------------------------------------
prisma db push => 현재 테이블 디비에 반영?
==24.04.23==
운영서버설정
[iwinv]
dasung04 / 12qwaszx,./
[VIP]
49.247.173.105
[domain]
dasung.co.kr
root / 12qwaszx,./

-----------------------
25.01.18
메인공유기 DMZ설정해서 2층 공유기 뚫고
NEXT공유기 포트포워딩 설정하고
nginx 설치 : : sudo apt install nginx
git 설치 : sudo apt install git
nodejs설치 : sudo apt install nodejs
npm설치 : sudo apt install npm
pm2설치 : sudo npm install pm2 -g

깃헙cli설치
```
(type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
	&& sudo mkdir -p -m 755 /etc/apt/keyrings \
        && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
        && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
	&& sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
	&& echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
	&& sudo apt update \
	&& sudo apt install gh -y
```
깃헙 로그인
$ gh auth login~
소스 클론
$ gh repo clone Addwords/dasung

$ pm2 start npm --name "dasung" -- start
