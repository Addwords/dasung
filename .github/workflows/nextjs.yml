# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Deployment job
  deploy:
    # environment:
    #   name: github-pages
    #   # url: ${{ steps.deployment.outputs.page_url }}
    #   url: addwords.github.io/dasung
    runs-on: ubuntu-latest
    needs: build
    steps:
      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4
        # env:
        #   NODE_ENV: production
      - name: Checkout code
        uses: actions/checkout@v4
      # - name: Install dependencies
      #   run: npm install
      # - name: Build with Next.js
      #   run: npx next build
      - name: List folders
        run: ls -al .
         # ubuntu 서버에 접속하여 빌드파일을 전송하고 배포된 파일을 교체
      - name: Copy build directory to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          source: ./
          target: /var/www/dasung/
          # script: sudo systemctl restart nginx